@model IEnumerable<Movie>

@{
    ViewData["Title"] = "Movies";
}
<div class="row mb-2">
    <div class="col-lg-1 ">
        <label>Search:</label>
    </div>
    <div class="col-lg-3 ">
        <div id="DataTables_Table_0_filter" class="dataTables_filter">          
            <input type="text" onkeyup="searchFilter()" id="myInputCard" placeholder="Enter Name Of Movie .." class="form-control form-control-sm" aria-controls="DataTables_Table_0">
        </div>
    </div>
</div>
<div class="row ">
   @foreach (var item in Model)
   {
        <div class="col-md-4 col-xs-6 border-primary mb-3 test">
            <div class="card mb-3" style="max-width: 540px;">
                <div class="row g-0" >
                    <div class="col-md-12">
                        <div class="card-header text-white bg-info">
                            <p class="card-text">
                                <h5 class="card-title">
                                    @item.Name
                                    
                                        <a class="text-white float-right" asp-action="Edit" asp-route-id="@item.Id"><i class="bi bi-pencil-square"></i></a>
                                    
                                </h5>
                            </p>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <img src="@item.ImageURL" width="100%" alt="@item.Name">
                    </div>
                    <div class="col-md-6">
                        <div class="card-body">
                            <p class="card-text">@item.Description</p>
                            <p class="card-text"><b>Cinema: </b>@item.cinema.Name</p>
                            <p class="card-text"><b>Category: </b>@item.MovieCategory</p>
                            <p class="card-text"><b>Start Date: </b>@item.StartDate.ToString("dd MMM yy")</p>
                            <p class="card-text"><b>End Date: </b>@item.EndDate.ToString("dd MMM yy")</p>
                            <p class="card-text ">
                                <b>Status: </b>
                                @if (DateTime.Now >= item.StartDate && DateTime.Now <= item.EndDate)
                                {
                                    <span class="badge bg-success text-white">AVAILABLE</span>
                                }
                                else if (DateTime.Now > item.EndDate)
                                {
                                    <span class="badge bg-danger text-white">EXPIRED</span>
                                }
                                else
                                {
                                    <span class="badge bg-primary text-white">UPCOMING</span>
                                }
                            </p>

                        </div>
                    </div>
                    <div class="col-md-12">
                        <div class="card-footer ">
                            <p class="card-text">
                                <a class="btn btn-outline-primary float-right" asp-action="Details" asp-route-id="@item.Id">
                                    <i class="bi bi-eye-fill"></i> Show Details
                                </a>
                                <a class="btn btn-success text-white @((DateTime.Now > item.EndDate) ? "disabled" : "")" 
                                   asp-controller="Orders" 
                                   asp-action="AddItemToShoppingCart" 
                                   asp-route-id="@item.Id">
                                <i class="bi bi-cart-plus"></i> Add to Cart (Price @item.Price.ToString("c"))</a>
                            </p>
                        </div>
                    </div>
                </div>
            </div>
       </div>
   }
</div>
@*<partial name="_CreateItem" model="@Model" />*@
@await Html.PartialAsync("_CreateItem","Movie")
@section Scripts{
    <script>
        var searchFilter = () => {
            const input = document.querySelector("#myInputCard");
            const cards = document.getElementsByClassName("test");
            let filter = input.value
            console.log(cards)
            for (let i = 0; i < cards.length; i++) {
                let title = cards[i].querySelector(".card-title");
                if (title.innerText.toLowerCase().indexOf(filter.toLowerCase()) > -1) {
                    cards[i].classList.remove("d-none")
                } else {
                    cards[i].classList.add("d-none")
                }
            }
        }
    </script>
}
